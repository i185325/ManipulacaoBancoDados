<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><head>

<meta charset="utf-8">
<meta name="generator" content="quarto-1.7.32">

<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">


<title>desafio08</title>
<style>
code{white-space: pre-wrap;}
span.smallcaps{font-variant: small-caps;}
div.columns{display: flex; gap: min(4vw, 1.5em);}
div.column{flex: auto; overflow-x: auto;}
div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
ul.task-list{list-style: none;}
ul.task-list li input[type="checkbox"] {
  width: 0.8em;
  margin: 0 0.8em 0.2em -1em; /* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */ 
  vertical-align: middle;
}
/* CSS for syntax highlighting */
html { -webkit-text-size-adjust: 100%; }
pre > code.sourceCode { white-space: pre; position: relative; }
pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }
pre > code.sourceCode > span:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode > span { color: inherit; text-decoration: inherit; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
pre > code.sourceCode { white-space: pre-wrap; }
pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
}
pre.numberSource code
  { counter-reset: source-line 0; }
pre.numberSource code > span
  { position: relative; left: -4em; counter-increment: source-line; }
pre.numberSource code > span > a:first-child::before
  { content: counter(source-line);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
  }
pre.numberSource { margin-left: 3em;  padding-left: 4px; }
div.sourceCode
  {   }
@media screen {
pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
}
</style>


<script src="desafio08_files/libs/clipboard/clipboard.min.js"></script>
<script src="desafio08_files/libs/quarto-html/quarto.js" type="module"></script>
<script src="desafio08_files/libs/quarto-html/tabsets/tabsets.js" type="module"></script>
<script src="desafio08_files/libs/quarto-html/popper.min.js"></script>
<script src="desafio08_files/libs/quarto-html/tippy.umd.min.js"></script>
<script src="desafio08_files/libs/quarto-html/anchor.min.js"></script>
<link href="desafio08_files/libs/quarto-html/tippy.css" rel="stylesheet">
<link href="desafio08_files/libs/quarto-html/quarto-syntax-highlighting-37eea08aefeeee20ff55810ff984fec1.css" rel="stylesheet" id="quarto-text-highlighting-styles">
<script src="desafio08_files/libs/bootstrap/bootstrap.min.js"></script>
<link href="desafio08_files/libs/bootstrap/bootstrap-icons.css" rel="stylesheet">
<link href="desafio08_files/libs/bootstrap/bootstrap-bb462d781dde1847d9e3ccf7736099dd.min.css" rel="stylesheet" append-hash="true" id="quarto-bootstrap" data-mode="light">


</head>

<body class="fullcontent quarto-light">

<div id="quarto-content" class="page-columns page-rows-contents page-layout-article">

<main class="content" id="quarto-document-content">

<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
<h1 class="title">desafio08</h1>
</div>



<div class="quarto-title-meta">

    
  
    
  </div>
  


</header>


<div class="cell">
<div class="sourceCode cell-code" id="cb1"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co"># Pacote necessário</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="fu">library</span>(RSQLite)</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="co"># Caminho do arquivo SQLite</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>arquivo <span class="ot">&lt;-</span> <span class="st">"C:</span><span class="sc">\\</span><span class="st">Users</span><span class="sc">\\</span><span class="st">BELA</span><span class="sc">\\</span><span class="st">Downloads</span><span class="sc">\\</span><span class="st">database.sqlite3"</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="co"># Conectando ao banco</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>conn <span class="ot">&lt;-</span> <span class="fu">dbConnect</span>(<span class="fu">SQLite</span>(), arquivo)</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="st">"Conexão bem-sucedida!</span><span class="sc">\n\n</span><span class="st">"</span>)</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Conexão bem-sucedida!</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co"># ==============================================</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="co"># 1. Professores que lecionaram disciplinas de estatística</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="co"># ==============================================</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>stat_instructors_query <span class="ot">&lt;-</span> <span class="fu">paste</span>(</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>  <span class="st">'SELECT instructors.name, abbreviation FROM subjects'</span>,</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN subject_memberships ON subjects.code = subject_memberships.subject_code'</span>,</span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN sections ON subject_memberships.course_offering_uuid = sections.course_offering_uuid'</span>,</span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN teachings ON sections.uuid = teachings.section_uuid'</span>,</span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN instructors ON teachings.instructor_id = instructors.id'</span>,</span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>  <span class="st">"WHERE abbreviation = 'STAT'"</span>,</span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>  <span class="at">sep =</span> <span class="st">" "</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>stat_instructors <span class="ot">&lt;-</span> <span class="fu">dbGetQuery</span>(conn, stat_instructors_query)</span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="fu">sprintf</span>(<span class="st">"Lecionaram %d professores de estatística.</span><span class="sc">\n</span><span class="st">"</span>,</span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>            <span class="fu">length</span>(<span class="fu">unique</span>(stat_instructors<span class="sc">$</span>name))))</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Lecionaram 377 professores de estatística.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="st">"Os professores são:</span><span class="sc">\n</span><span class="st">"</span>)</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Os professores são:</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="fu">print</span>(<span class="fu">unique</span>(stat_instructors<span class="sc">$</span>name))</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  [1] "MINJING TAO"                   "DONALD PORTER"                
  [3] "SHENG WANG"                    "KUNLING HUANG"                
  [5] "DONG XIA"                      "JENNIFER NGUYEN"              
  [7] "SEULKEE YUN"                   "DUZHE WANG"                   
  [9] "YONGFENG WU"                   "JARED BROWN"                  
 [11] "YUCHEN ZHOU"                   "VICTOR LUO"                   
 [13] "GUN WOONG PARK"                "BROOK LUERS"                  
 [15] "DUY NGUYEN"                    "JOHN GILLETT"                 
 [17] "QUOC TRAN"                     "YAOYAO XU"                    
 [19] "JIE ZHANG"                     "LONG PHAN"                    
 [21] "WESLEY CHANG"                  "TONG LI"                      
 [23] "SHANE HUBLER"                  "FAN YANG"                     
 [25] "JU HEE CHO"                    "JEEA CHOI"                    
 [27] "SHIXUE LIU"                    "WEI-YIN LOH"                  
 [29] "BIN DAI"                       "XIPEI YANG"                   
 [31] "DOUGLAS M. BATES"              "MICHAEL GEORGE ILTIS"         
 [33] "LIAM JOHNSTON"                 "CRYSTAL CHEN"                 
 [35] "YIFAN MEI"                     "RUI CHEN"                     
 [37] "JILI WANG"                     "LUWAN ZHANG"                  
 [39] "GINA BENNINGER"                "JIE SONG"                     
 [41] "XIWEN MA"                      "HAODA FU"                     
 [43] "DEYUAN JIANG"                  "JINGJIANG PENG"               
 [45] "ERICA LEE DEADMAN"             "AKICHIKA OZEKI"               
 [47] "MENG SONG"                     "HAO TENG"                     
 [49] "DONGGYU KIM"                   "COLIN LONGHURST"              
 [51] "FREDERICK BOEHM"               "YONGSU LEE"                   
 [53] "GONZALO CONTADOR"              "HAO CHEN"                     
 [55] "XIN ZHANG"                     "BO YANG"                      
 [57] "RUNGANG HAN"                   "SEAN KENT"                    
 [59] "DEBRAJ DAS"                    "YI LI"                        
 [61] "CLAIRE BOBST"                  "CHAN PARK"                    
 [63] "SIJING LI"                     "SHENGJI JIA"                  
 [65] "YUCHANG WU"                    "ZHUANG WU"                    
 [67] "XIAOMAO LI"                    "HYEBIN SONG"                  
 [69] "YOURAN QI"                     "YOUNG MIN PARK"               
 [71] "BIN ZHANG"                     "QIURONG CUI"                  
 [73] "SEHO PARK"                     "SHENG ZHANG"                  
 [75] "HUIKUN ZHANG"                  "ALYSSA DIGILIO"               
 [77] "YUQING XU"                     "STEPHEN BERG"                 
 [79] "PEIGEN ZHOU"                   "YAN CHEN"                     
 [81] "QIONG ZHANG"                   "YOUNGDEOK HWANG"              
 [83] "HAN CHEN"                      "NICHOLAS STEPHEN KEULER"      
 [85] "ZHENGXIAO WU"                  "YUJIN CHUNG"                  
 [87] "WENWEN ZHANG"                  "PERLA REYES"                  
 [89] "QI TANG"                       "CHIA-CHIEH LIN"               
 [91] "JIALE XU"                      "YANG ZHAO"                    
 [93] "XINWEI DENG"                   "MING XIE"                     
 [95] "JINGCI MENG"                   "ISMOR FISCHER"                
 [97] "JIAJIE CHEN"                   "ZUOFENG SHANG"                
 [99] "HAO ZHENG"                     "XU XU"                        
[101] "BIN ZHU"                       "QUEFENG LI"                   
[103] "YU QIU LIU"                    "JUN LI"                       
[105] "FAN GAO"                       "VICTORIA MANSFIELD"           
[107] "ANQI SHI"                      "KYLE HEBERT"                  
[109] "XIUYU MA"                      "CHENLIANG XU"                 
[111] "CHANHAN HSU"                   "YUANZHI LI"                   
[113] "KAM-WAH TSUI"                  "XINYU SONG"                   
[115] "TIMOTHY IDOWU"                 "XIAO NIE"                     
[117] "CHEN CHENG"                    "ANDREW LESLIE"                
[119] "YAOGUO XIE"                    "KEVIN PACKARD"                
[121] "YI LIU"                        "WENZHI CAO"                   
[123] "JOSEPH DEUTSCH"                "LAN LUO"                      
[125] "RYAN ZEA"                      "ROBERT WARDROP"               
[127] "SANGBUM CHOI"                  "XIN LI"                       
[129] "SEUNGBONG HAN"                 "ZHIGUO XIAO"                  
[131] "RICHARD A. JOHNSON"            "RUI TANG"                     
[133] "IAN BRANSTAD RILEY"            "BO HUANG"                     
[135] "HEATHER MARIE BRAZEAU"         "XU HE"                        
[137] "GARY HOWARD SCHROEDER"         "JUN ZHANG"                    
[139] "CHENXI LI"                     "SONA Z SWANSON"               
[141] "YUAN JIANG"                    "JUNHEE HAN"                   
[143] "LILUN DU"                      "XIRAN WANG"                   
[145] "ZIFENG ZHAO"                   "CUIZE HAN"                    
[147] "YING ZHANG"                    "JOHN DAVIS"                   
[149] "CHEN JING"                     "JINGLAN LI"                   
[151] "YI CHAI"                       "THU LE"                       
[153] "ALAN HUANG"                    "HAOYANG FAN"                  
[155] "BOWEN HU"                      "TZU HSIANG HUNG"              
[157] "TUN LEE NG"                    "ABIGAIL BENZINE"              
[159] "ALEXANDER COVINGTON"           "CHELSEY GREEN"                
[161] "MICHAEL KUTZLER"               "LILI ZHENG"                   
[163] "REBECCA POST"                  "LU YANG"                      
[165] "RUOSI GUO"                     "XUN ZHAO"                     
[167] "MIN NIU"                       "JIAN WU"                      
[169] "WEI ZHENG"                     "XINJIE HE"                    
[171] "JIE WEI"                       "CLAUDIA SOLIS LEMUS"          
[173] "XUEYAO CHEN"                   "MANJUSHA KANCHARLA"           
[175] "MITCHELL PAUKNER"              "XIAOWU DAI"                   
[177] "CHENGNING ZHANG"               "GINA OH"                      
[179] "LUXI CAO"                      "SONG WANG"                    
[181] "LAM HO"                        "TIEN VO"                      
[183] "SHIZHEN WANG"                  "SOHEIL SADEGHI"               
[185] "BINGYING XIE"                  "GENG LI"                      
[187] "JENNIFER BIRSTLER"             "MARIA KAMENETSKY"             
[189] "KYLE HERBET"                   "JIANCHANG HU"                 
[191] "TRAM TA"                       "YUAN WANG"                    
[193] "KAZUHIKO SHINKI"               "SIJIAN WANG"                  
[195] "CHIEN-WEI CHEN"                "BEHZAD AALIPUR"               
[197] "DEREK BEAN"                    "BEN ADAM HAALAND"             
[199] "ELOISA D CHAVAS"               "YALI WANG"                    
[201] "VARSHA KULKARNI"               "SCOTT JOSEPH HETZEL"          
[203] "MIN JUNG LEE"                  "FANG FANG"                    
[205] "KRISTEN CYFFKA"                "TING-LI LIN"                  
[207] "BRET LARGET"                   "KATHERINE GOODE"              
[209] "ERIK NORDHEIM"                 "NING FAN"                     
[211] "ANRU ZHANG"                    "GARVESH RASKUTTI"             
[213] "KRISHNAKUMAR BALASUBRAMANIAN"  "YAZHEN WANG"                  
[215] "CHAOYANG YU"                   "YILIN ZHANG"                  
[217] "ZHENGJUN ZHANG"                "XIUFENG SHAO"                 
[219] "YUAN LI"                       "BRET HANLON"                  
[221] "LILI LAN"                      "CECILE ANE"                   
[223] "ZHANG CHUNMING"                "LEI XU"                       
[225] "MUHONG GAO"                    "AUGUST JENSEN"                
[227] "XIAO GUO"                      "THOMAS G. KURTZ"              
[229] "NICHOLAS HENDERSON"            "CHENSHENG KUANG"              
[231] "TAERI UHM"                     "NORBERT BINKIEWICZ"           
[233] "KARL ROHE"                     "JUNGWON MUN"                  
[235] "JOSEP GINEBRA"                 "TAO YU"                       
[237] "XINXIN YU"                     "HAO ZHOU"                     
[239] "LIE XIONG"                     "QIAN ZHIGUANG"                
[241] "SHANG WU"                      "SHAN LU"                      
[243] "STEPHEN AARON STANHOPE"        "LANCINE KONATE"               
[245] "GUILHERME VIEIRA NUNES LUDWIG" "PAUL SAVARIAPPAN"             
[247] "CUICUI QI"                     "KJELL DOKSUM"                 
[249] "DEREK NORTON"                  "KEEGAN KORTHAUER"             
[251] "KAILEI CHEN"                   "THEVAASIINEN CHANDERENG"      
[253] "JOHN KANE"                     "SOKOL VAKO"                   
[255] "QING LI"                       "YOUNG LEE"                    
[257] "HYUNSEUNG KANG"                "BEHZAD AALIPUR HAFSHEJANI"    
[259] "SHULEI WANG"                   "ZHONGJIE YU"                  
[261] "LIN QI"                        "JIWEI ZHAO"                   
[263] "SUNDUZ KELES"                  "SHUYUN YE"                    
[265] "HUI WANG"                      "KEVIN HASEGAWA ENG"           
[267] "XIAODAN WEI"                   "MARIA ROJO"                   
[269] "RUIFENG XU"                    "YONGJOON KIM"                 
[271] "NELLIE LAUGHLIN"               "MICHAEL HOGAN"                
[273] "KARL BROMAN"                   "REBECCA KOSCIK"               
[275] "RONGJUN ZHU"                   "BI CHENG WU"                  
[277] "YUNONG LIN"                    "ZHIGENG GENG"                 
[279] "XIAOPING FENG"                 "SHUANG HUANG"                 
[281] "GUANNAN SUN"                   "JEE YEON KIM"                 
[283] "GREGORY SHINAULT"              "TONGHAI YANG"                 
[285] "TIMO SEPPALAINEN"              "BENEDEK VALKO"                
[287] "DAVID GRIFFEATH"               "DAVID ANDERSON"               
[289] "PHILIP WOOD"                   "FLORIAN BERTRAND"             
[291] "JASON RICHARD SWANSON"         "ALEXANDER KISELEV"            
[293] "SAMUEL STECHMANN"              "WAI TONG FAN"                 
[295] "JUN YIN"                       "STEFFEN LEMPP"                
[297] "RUIFANG SONG"                  "JAMES D KUELBS"               
[299] "ANATOLE BECK"                  "DONGHYUN LEE"                 
[301] "ANDREJ ZLATOS"                 "DANIELE CAPPELLETTI"          
[303] "MIHAELA IFRIM"                 "SEBASTIEN ROCH"               
[305] "SCOTT HOTTOVY"                 "JONATHON PETERSON"            
[307] "STEPHEN WAINGER"               "ALEXANDER FISH"               
[309] "GREGORIO MORENO-FLORES"        "SUKHENDU MEHROTRA"            
[311] "DIETRICH UHLENBROCK"           "LEV BORISOV"                  
[313] "RICHARD A BRUALDI"             "ARNOLD MILLER"                
[315] "MATTHEW BALLARD"               "ALBRECHT KLEMM"               
[317] "PAUL M TERWILLIGER"            "STEVEN SAM"                   
[319] "KEN ONO"                       "ROBERT HARRON"                
[321] "YANNAN QIU"                    "JOHN WILTSHIRE-GORDON"        
[323] "KYUNGMANN KIM"                 "CHRISTOPHER WAGNER"           
[325] "PAUL RATHOUZ"                  "STEPHEN WRIGHT"               
[327] "BENJAMIN RECHT"                "MICHAEL FERRIS"               
[329] "JESSE THOMAS HOLZER"           "HUILIN HU"                    
[331] "ALBERTO DEL PIA"               "ROBERT R MEYER"               
[333] "SHI JIN"                       "MARY LINDSTROM"               
[335] "ADIN-CRISTIAN ANDREI"          "MICHAEL LIOU"                 
[337] "CHAOQUN MEI"                   "CHRISTINA M. KENDZIORSKI"     
[339] "RONALD GANGNON"                "ROBERT WAYNE GREEN"           
[341] "COLE COOK"                     "MURRAY CLAYTON"               
[343] "QI JIANG"                      "JUN ZHU"                      
[345] "ANNE BRUCKNER"                 "TING YE"                      
[347] "JUN SHAO"                      "HUAIBAO FENG"                 
[349] "ZIJIAN NI"                     "THOMAS COOK"                  
[351] "RICHARD J. CHAPPELL"           "MOO K CHUNG"                  
[353] "MICHAEL NEWTON"                "BRIAN YANDELL"                
[355] "MICHELLE HARRIS"               "NORMAN DRAPER"                
[357] "YU MENGGANG"                   "MING YUAN"                    
[359] "FANGFANG WANG"                 "JUNHO LEE"                    
[361] "GRACE WAHBA"                   "JASON P FINE"                 
[363] "MICHAEL RENE KOSOROK"          "YAJUAN SI"                    
[365] "LU MAO"                        "DAVID DEMETS"                 
[367] "JAMES ANDERSON"                "EDWARD ERKER"                 
[369] "SHUAI CHEN"                    "MARI PALTA"                   
[371] "GUANHUA CHEN"                  "SRIKANTHMADHAVAN ARAVAMUTHAN" 
[373] "NATALIA DE LEON GATTI"         "GUILHERME ROSA"               
[375] "YANBING ZHENG"                 "CHRISTINE SORKNESS"           
[377] "MARIAN R FISHER"              </code></pre>
</div>
<div class="sourceCode cell-code" id="cb9"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="co"># ==============================================</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="co"># 2. Professor mais difícil e mais fácil (pelo GPA médio)</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="co"># ==============================================</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>sql_prof <span class="ot">&lt;-</span> <span class="fu">paste</span>(</span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>  <span class="st">'SELECT instructors.name, subjects.abbreviation,'</span>,</span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>  <span class="st">'AVG(</span></span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a><span class="st">     (4.0 * gd.a_count +</span></span>
<span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a><span class="st">      3.5 * gd.ab_count +</span></span>
<span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a><span class="st">      3.0 * gd.b_count +</span></span>
<span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a><span class="st">      2.5 * gd.bc_count +</span></span>
<span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a><span class="st">      2.0 * gd.c_count +</span></span>
<span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a><span class="st">      1.0 * gd.d_count +</span></span>
<span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a><span class="st">      0.0 * gd.f_count)</span></span>
<span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a><span class="st">      / NULLIF((gd.a_count + gd.ab_count + gd.b_count +</span></span>
<span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a><span class="st">                gd.bc_count + gd.c_count + gd.d_count +</span></span>
<span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a><span class="st">                gd.f_count), 0)</span></span>
<span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a><span class="st">   ) AS gpa_avg'</span>,</span>
<span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a>  <span class="st">'FROM subjects'</span>,</span>
<span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN subject_memberships sm ON subjects.code = sm.subject_code'</span>,</span>
<span id="cb9-21"><a href="#cb9-21" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN course_offerings co ON sm.course_offering_uuid = co.uuid'</span>,</span>
<span id="cb9-22"><a href="#cb9-22" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN grade_distributions gd ON co.uuid = gd.course_offering_uuid'</span>,</span>
<span id="cb9-23"><a href="#cb9-23" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN sections s ON co.uuid = s.course_offering_uuid'</span>,</span>
<span id="cb9-24"><a href="#cb9-24" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN teachings t ON s.uuid = t.section_uuid'</span>,</span>
<span id="cb9-25"><a href="#cb9-25" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN instructors ON t.instructor_id = instructors.id'</span>,</span>
<span id="cb9-26"><a href="#cb9-26" aria-hidden="true" tabindex="-1"></a>  <span class="st">'WHERE subjects.abbreviation = "STAT"'</span>,</span>
<span id="cb9-27"><a href="#cb9-27" aria-hidden="true" tabindex="-1"></a>  <span class="st">'GROUP BY instructors.name'</span>,</span>
<span id="cb9-28"><a href="#cb9-28" aria-hidden="true" tabindex="-1"></a>  <span class="at">sep =</span> <span class="st">" "</span></span>
<span id="cb9-29"><a href="#cb9-29" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb9-30"><a href="#cb9-30" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-31"><a href="#cb9-31" aria-hidden="true" tabindex="-1"></a>ProfessorMaisDificil <span class="ot">&lt;-</span> <span class="fu">dbGetQuery</span>(</span>
<span id="cb9-32"><a href="#cb9-32" aria-hidden="true" tabindex="-1"></a>  conn,</span>
<span id="cb9-33"><a href="#cb9-33" aria-hidden="true" tabindex="-1"></a>  <span class="fu">paste</span>(<span class="st">'SELECT * FROM ('</span>, sql_prof, <span class="st">') sub'</span>,</span>
<span id="cb9-34"><a href="#cb9-34" aria-hidden="true" tabindex="-1"></a>        <span class="st">'WHERE gpa_avg IS NOT NULL'</span>,</span>
<span id="cb9-35"><a href="#cb9-35" aria-hidden="true" tabindex="-1"></a>        <span class="st">'ORDER BY gpa_avg ASC LIMIT 1'</span>)</span>
<span id="cb9-36"><a href="#cb9-36" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb9-37"><a href="#cb9-37" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-38"><a href="#cb9-38" aria-hidden="true" tabindex="-1"></a>ProfessorMaisFacil <span class="ot">&lt;-</span> <span class="fu">dbGetQuery</span>(</span>
<span id="cb9-39"><a href="#cb9-39" aria-hidden="true" tabindex="-1"></a>  conn,</span>
<span id="cb9-40"><a href="#cb9-40" aria-hidden="true" tabindex="-1"></a>  <span class="fu">paste</span>(<span class="st">'SELECT * FROM ('</span>, sql_prof, <span class="st">') sub'</span>,</span>
<span id="cb9-41"><a href="#cb9-41" aria-hidden="true" tabindex="-1"></a>        <span class="st">'ORDER BY gpa_avg DESC LIMIT 1'</span>)</span>
<span id="cb9-42"><a href="#cb9-42" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb9-43"><a href="#cb9-43" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-44"><a href="#cb9-44" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="st">"</span><span class="sc">\n</span><span class="st">==============================================</span><span class="sc">\n</span><span class="st">"</span>)</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
==============================================</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="fu">sprintf</span>(<span class="st">"Professor mais difícil: %s (GPA médio = %.2f)</span><span class="sc">\n</span><span class="st">"</span>,</span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a>            ProfessorMaisDificil<span class="sc">$</span>name, ProfessorMaisDificil<span class="sc">$</span>gpa_avg))</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Professor mais difícil: JAMES D KUELBS (GPA médio = 2.60)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="fu">sprintf</span>(<span class="st">"Professor mais fácil:   %s (GPA médio = %.2f)</span><span class="sc">\n</span><span class="st">"</span>,</span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a>            ProfessorMaisFacil<span class="sc">$</span>name, ProfessorMaisFacil<span class="sc">$</span>gpa_avg))</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Professor mais fácil:   GUANHUA CHEN (GPA médio = 4.00)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="co"># ==============================================</span></span>
<span id="cb15-2"><a href="#cb15-2" aria-hidden="true" tabindex="-1"></a><span class="co"># 3. Disciplina mais difícil e mais fácil (pelo GPA médio)</span></span>
<span id="cb15-3"><a href="#cb15-3" aria-hidden="true" tabindex="-1"></a><span class="co"># ==============================================</span></span>
<span id="cb15-4"><a href="#cb15-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-5"><a href="#cb15-5" aria-hidden="true" tabindex="-1"></a>sql_disc <span class="ot">&lt;-</span> <span class="fu">paste</span>(</span>
<span id="cb15-6"><a href="#cb15-6" aria-hidden="true" tabindex="-1"></a>  <span class="st">'SELECT courses.name AS course_name, subjects.abbreviation,'</span>,</span>
<span id="cb15-7"><a href="#cb15-7" aria-hidden="true" tabindex="-1"></a>  <span class="st">'AVG(</span></span>
<span id="cb15-8"><a href="#cb15-8" aria-hidden="true" tabindex="-1"></a><span class="st">     (4.0 * gd.a_count +</span></span>
<span id="cb15-9"><a href="#cb15-9" aria-hidden="true" tabindex="-1"></a><span class="st">      3.5 * gd.ab_count +</span></span>
<span id="cb15-10"><a href="#cb15-10" aria-hidden="true" tabindex="-1"></a><span class="st">      3.0 * gd.b_count +</span></span>
<span id="cb15-11"><a href="#cb15-11" aria-hidden="true" tabindex="-1"></a><span class="st">      2.5 * gd.bc_count +</span></span>
<span id="cb15-12"><a href="#cb15-12" aria-hidden="true" tabindex="-1"></a><span class="st">      2.0 * gd.c_count +</span></span>
<span id="cb15-13"><a href="#cb15-13" aria-hidden="true" tabindex="-1"></a><span class="st">      1.0 * gd.d_count +</span></span>
<span id="cb15-14"><a href="#cb15-14" aria-hidden="true" tabindex="-1"></a><span class="st">      0.0 * gd.f_count)</span></span>
<span id="cb15-15"><a href="#cb15-15" aria-hidden="true" tabindex="-1"></a><span class="st">      / NULLIF((gd.a_count + gd.ab_count + gd.b_count +</span></span>
<span id="cb15-16"><a href="#cb15-16" aria-hidden="true" tabindex="-1"></a><span class="st">                gd.bc_count + gd.c_count + gd.d_count +</span></span>
<span id="cb15-17"><a href="#cb15-17" aria-hidden="true" tabindex="-1"></a><span class="st">                gd.f_count), 0)</span></span>
<span id="cb15-18"><a href="#cb15-18" aria-hidden="true" tabindex="-1"></a><span class="st">   ) AS gpa_avg'</span>,</span>
<span id="cb15-19"><a href="#cb15-19" aria-hidden="true" tabindex="-1"></a>  <span class="st">'FROM subjects'</span>,</span>
<span id="cb15-20"><a href="#cb15-20" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN subject_memberships sm ON subjects.code = sm.subject_code'</span>,</span>
<span id="cb15-21"><a href="#cb15-21" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN course_offerings co ON sm.course_offering_uuid = co.uuid'</span>,</span>
<span id="cb15-22"><a href="#cb15-22" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN courses ON co.course_uuid = courses.uuid'</span>,</span>
<span id="cb15-23"><a href="#cb15-23" aria-hidden="true" tabindex="-1"></a>  <span class="st">'JOIN grade_distributions gd ON co.uuid = gd.course_offering_uuid'</span>,</span>
<span id="cb15-24"><a href="#cb15-24" aria-hidden="true" tabindex="-1"></a>  <span class="st">'WHERE subjects.abbreviation = "STAT"'</span>,</span>
<span id="cb15-25"><a href="#cb15-25" aria-hidden="true" tabindex="-1"></a>  <span class="st">'GROUP BY courses.name, subjects.abbreviation'</span>,</span>
<span id="cb15-26"><a href="#cb15-26" aria-hidden="true" tabindex="-1"></a>  <span class="at">sep =</span> <span class="st">" "</span></span>
<span id="cb15-27"><a href="#cb15-27" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb15-28"><a href="#cb15-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-29"><a href="#cb15-29" aria-hidden="true" tabindex="-1"></a>DisciplinaMaisDificil <span class="ot">&lt;-</span> <span class="fu">dbGetQuery</span>(</span>
<span id="cb15-30"><a href="#cb15-30" aria-hidden="true" tabindex="-1"></a>  conn,</span>
<span id="cb15-31"><a href="#cb15-31" aria-hidden="true" tabindex="-1"></a>  <span class="fu">paste</span>(<span class="st">'SELECT * FROM ('</span>, sql_disc, <span class="st">') sub'</span>,</span>
<span id="cb15-32"><a href="#cb15-32" aria-hidden="true" tabindex="-1"></a>        <span class="st">'WHERE gpa_avg IS NOT NULL'</span>,</span>
<span id="cb15-33"><a href="#cb15-33" aria-hidden="true" tabindex="-1"></a>        <span class="st">'ORDER BY gpa_avg ASC LIMIT 1'</span>)</span>
<span id="cb15-34"><a href="#cb15-34" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb15-35"><a href="#cb15-35" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-36"><a href="#cb15-36" aria-hidden="true" tabindex="-1"></a>DisciplinaMaisFacil <span class="ot">&lt;-</span> <span class="fu">dbGetQuery</span>(</span>
<span id="cb15-37"><a href="#cb15-37" aria-hidden="true" tabindex="-1"></a>  conn,</span>
<span id="cb15-38"><a href="#cb15-38" aria-hidden="true" tabindex="-1"></a>  <span class="fu">paste</span>(<span class="st">'SELECT * FROM ('</span>, sql_disc, <span class="st">') sub'</span>,</span>
<span id="cb15-39"><a href="#cb15-39" aria-hidden="true" tabindex="-1"></a>        <span class="st">'ORDER BY gpa_avg DESC LIMIT 1'</span>)</span>
<span id="cb15-40"><a href="#cb15-40" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb15-41"><a href="#cb15-41" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-42"><a href="#cb15-42" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="st">"</span><span class="sc">\n</span><span class="st">==============================================</span><span class="sc">\n</span><span class="st">"</span>)</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
==============================================</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><a href="#cb17-1" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="fu">sprintf</span>(<span class="st">"Disciplina mais difícil: %s (GPA médio = %.2f)</span><span class="sc">\n</span><span class="st">"</span>,</span>
<span id="cb17-2"><a href="#cb17-2" aria-hidden="true" tabindex="-1"></a>            DisciplinaMaisDificil<span class="sc">$</span>course_name, DisciplinaMaisDificil<span class="sc">$</span>gpa_avg))</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Disciplina mais difícil: Introduction to the Theory of Probability (GPA médio = 2.89)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><a href="#cb19-1" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="fu">sprintf</span>(<span class="st">"Disciplina mais fácil:   %s (GPA médio = %.2f)</span><span class="sc">\n</span><span class="st">"</span>,</span>
<span id="cb19-2"><a href="#cb19-2" aria-hidden="true" tabindex="-1"></a>            DisciplinaMaisFacil<span class="sc">$</span>course_name, DisciplinaMaisFacil<span class="sc">$</span>gpa_avg))</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Disciplina mais fácil:   Data Science Practicum (GPA médio = 4.00)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><a href="#cb21-1" aria-hidden="true" tabindex="-1"></a><span class="co"># ==============================================</span></span>
<span id="cb21-2"><a href="#cb21-2" aria-hidden="true" tabindex="-1"></a><span class="co"># 4. Encerrar a conexão</span></span>
<span id="cb21-3"><a href="#cb21-3" aria-hidden="true" tabindex="-1"></a><span class="co"># ==============================================</span></span>
<span id="cb21-4"><a href="#cb21-4" aria-hidden="true" tabindex="-1"></a><span class="fu">dbDisconnect</span>(conn)</span>
<span id="cb21-5"><a href="#cb21-5" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span>(<span class="st">"</span><span class="sc">\n</span><span class="st">Conexão encerrada com sucesso!</span><span class="sc">\n</span><span class="st">"</span>)</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Conexão encerrada com sucesso!</code></pre>
</div>
</div>

</main>
<!-- /main column -->
<script id="quarto-html-after-body" type="application/javascript">
  window.document.addEventListener("DOMContentLoaded", function (event) {
    const icon = "";
    const anchorJS = new window.AnchorJS();
    anchorJS.options = {
      placement: 'right',
      icon: icon
    };
    anchorJS.add('.anchored');
    const isCodeAnnotation = (el) => {
      for (const clz of el.classList) {
        if (clz.startsWith('code-annotation-')) {                     
          return true;
        }
      }
      return false;
    }
    const onCopySuccess = function(e) {
      // button target
      const button = e.trigger;
      // don't keep focus
      button.blur();
      // flash "checked"
      button.classList.add('code-copy-button-checked');
      var currentTitle = button.getAttribute("title");
      button.setAttribute("title", "Copied!");
      let tooltip;
      if (window.bootstrap) {
        button.setAttribute("data-bs-toggle", "tooltip");
        button.setAttribute("data-bs-placement", "left");
        button.setAttribute("data-bs-title", "Copied!");
        tooltip = new bootstrap.Tooltip(button, 
          { trigger: "manual", 
            customClass: "code-copy-button-tooltip",
            offset: [0, -8]});
        tooltip.show();    
      }
      setTimeout(function() {
        if (tooltip) {
          tooltip.hide();
          button.removeAttribute("data-bs-title");
          button.removeAttribute("data-bs-toggle");
          button.removeAttribute("data-bs-placement");
        }
        button.setAttribute("title", currentTitle);
        button.classList.remove('code-copy-button-checked');
      }, 1000);
      // clear code selection
      e.clearSelection();
    }
    const getTextToCopy = function(trigger) {
        const codeEl = trigger.previousElementSibling.cloneNode(true);
        for (const childEl of codeEl.children) {
          if (isCodeAnnotation(childEl)) {
            childEl.remove();
          }
        }
        return codeEl.innerText;
    }
    const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {
      text: getTextToCopy
    });
    clipboard.on('success', onCopySuccess);
    if (window.document.getElementById('quarto-embedded-source-code-modal')) {
      const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {
        text: getTextToCopy,
        container: window.document.getElementById('quarto-embedded-source-code-modal')
      });
      clipboardModal.on('success', onCopySuccess);
    }
      var localhostRegex = new RegExp(/^(?:http|https):\/\/localhost\:?[0-9]*\//);
      var mailtoRegex = new RegExp(/^mailto:/);
        var filterRegex = new RegExp('/' + window.location.host + '/');
      var isInternal = (href) => {
          return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);
      }
      // Inspect non-navigation links and adorn them if external
     var links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');
      for (var i=0; i<links.length; i++) {
        const link = links[i];
        if (!isInternal(link.href)) {
          // undo the damage that might have been done by quarto-nav.js in the case of
          // links that we want to consider external
          if (link.dataset.originalHref !== undefined) {
            link.href = link.dataset.originalHref;
          }
        }
      }
    function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {
      const config = {
        allowHTML: true,
        maxWidth: 500,
        delay: 100,
        arrow: false,
        appendTo: function(el) {
            return el.parentElement;
        },
        interactive: true,
        interactiveBorder: 10,
        theme: 'quarto',
        placement: 'bottom-start',
      };
      if (contentFn) {
        config.content = contentFn;
      }
      if (onTriggerFn) {
        config.onTrigger = onTriggerFn;
      }
      if (onUntriggerFn) {
        config.onUntrigger = onUntriggerFn;
      }
      window.tippy(el, config); 
    }
    const noterefs = window.document.querySelectorAll('a[role="doc-noteref"]');
    for (var i=0; i<noterefs.length; i++) {
      const ref = noterefs[i];
      tippyHover(ref, function() {
        // use id or data attribute instead here
        let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');
        try { href = new URL(href).hash; } catch {}
        const id = href.replace(/^#\/?/, "");
        const note = window.document.getElementById(id);
        if (note) {
          return note.innerHTML;
        } else {
          return "";
        }
      });
    }
    const xrefs = window.document.querySelectorAll('a.quarto-xref');
    const processXRef = (id, note) => {
      // Strip column container classes
      const stripColumnClz = (el) => {
        el.classList.remove("page-full", "page-columns");
        if (el.children) {
          for (const child of el.children) {
            stripColumnClz(child);
          }
        }
      }
      stripColumnClz(note)
      if (id === null || id.startsWith('sec-')) {
        // Special case sections, only their first couple elements
        const container = document.createElement("div");
        if (note.children && note.children.length > 2) {
          container.appendChild(note.children[0].cloneNode(true));
          for (let i = 1; i < note.children.length; i++) {
            const child = note.children[i];
            if (child.tagName === "P" && child.innerText === "") {
              continue;
            } else {
              container.appendChild(child.cloneNode(true));
              break;
            }
          }
          if (window.Quarto?.typesetMath) {
            window.Quarto.typesetMath(container);
          }
          return container.innerHTML
        } else {
          if (window.Quarto?.typesetMath) {
            window.Quarto.typesetMath(note);
          }
          return note.innerHTML;
        }
      } else {
        // Remove any anchor links if they are present
        const anchorLink = note.querySelector('a.anchorjs-link');
        if (anchorLink) {
          anchorLink.remove();
        }
        if (window.Quarto?.typesetMath) {
          window.Quarto.typesetMath(note);
        }
        if (note.classList.contains("callout")) {
          return note.outerHTML;
        } else {
          return note.innerHTML;
        }
      }
    }
    for (var i=0; i<xrefs.length; i++) {
      const xref = xrefs[i];
      tippyHover(xref, undefined, function(instance) {
        instance.disable();
        let url = xref.getAttribute('href');
        let hash = undefined; 
        if (url.startsWith('#')) {
          hash = url;
        } else {
          try { hash = new URL(url).hash; } catch {}
        }
        if (hash) {
          const id = hash.replace(/^#\/?/, "");
          const note = window.document.getElementById(id);
          if (note !== null) {
            try {
              const html = processXRef(id, note.cloneNode(true));
              instance.setContent(html);
            } finally {
              instance.enable();
              instance.show();
            }
          } else {
            // See if we can fetch this
            fetch(url.split('#')[0])
            .then(res => res.text())
            .then(html => {
              const parser = new DOMParser();
              const htmlDoc = parser.parseFromString(html, "text/html");
              const note = htmlDoc.getElementById(id);
              if (note !== null) {
                const html = processXRef(id, note);
                instance.setContent(html);
              } 
            }).finally(() => {
              instance.enable();
              instance.show();
            });
          }
        } else {
          // See if we can fetch a full url (with no hash to target)
          // This is a special case and we should probably do some content thinning / targeting
          fetch(url)
          .then(res => res.text())
          .then(html => {
            const parser = new DOMParser();
            const htmlDoc = parser.parseFromString(html, "text/html");
            const note = htmlDoc.querySelector('main.content');
            if (note !== null) {
              // This should only happen for chapter cross references
              // (since there is no id in the URL)
              // remove the first header
              if (note.children.length > 0 && note.children[0].tagName === "HEADER") {
                note.children[0].remove();
              }
              const html = processXRef(null, note);
              instance.setContent(html);
            } 
          }).finally(() => {
            instance.enable();
            instance.show();
          });
        }
      }, function(instance) {
      });
    }
        let selectedAnnoteEl;
        const selectorForAnnotation = ( cell, annotation) => {
          let cellAttr = 'data-code-cell="' + cell + '"';
          let lineAttr = 'data-code-annotation="' +  annotation + '"';
          const selector = 'span[' + cellAttr + '][' + lineAttr + ']';
          return selector;
        }
        const selectCodeLines = (annoteEl) => {
          const doc = window.document;
          const targetCell = annoteEl.getAttribute("data-target-cell");
          const targetAnnotation = annoteEl.getAttribute("data-target-annotation");
          const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));
          const lines = annoteSpan.getAttribute("data-code-lines").split(",");
          const lineIds = lines.map((line) => {
            return targetCell + "-" + line;
          })
          let top = null;
          let height = null;
          let parent = null;
          if (lineIds.length > 0) {
              //compute the position of the single el (top and bottom and make a div)
              const el = window.document.getElementById(lineIds[0]);
              top = el.offsetTop;
              height = el.offsetHeight;
              parent = el.parentElement.parentElement;
            if (lineIds.length > 1) {
              const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);
              const bottom = lastEl.offsetTop + lastEl.offsetHeight;
              height = bottom - top;
            }
            if (top !== null && height !== null && parent !== null) {
              // cook up a div (if necessary) and position it 
              let div = window.document.getElementById("code-annotation-line-highlight");
              if (div === null) {
                div = window.document.createElement("div");
                div.setAttribute("id", "code-annotation-line-highlight");
                div.style.position = 'absolute';
                parent.appendChild(div);
              }
              div.style.top = top - 2 + "px";
              div.style.height = height + 4 + "px";
              div.style.left = 0;
              let gutterDiv = window.document.getElementById("code-annotation-line-highlight-gutter");
              if (gutterDiv === null) {
                gutterDiv = window.document.createElement("div");
                gutterDiv.setAttribute("id", "code-annotation-line-highlight-gutter");
                gutterDiv.style.position = 'absolute';
                const codeCell = window.document.getElementById(targetCell);
                const gutter = codeCell.querySelector('.code-annotation-gutter');
                gutter.appendChild(gutterDiv);
              }
              gutterDiv.style.top = top - 2 + "px";
              gutterDiv.style.height = height + 4 + "px";
            }
            selectedAnnoteEl = annoteEl;
          }
        };
        const unselectCodeLines = () => {
          const elementsIds = ["code-annotation-line-highlight", "code-annotation-line-highlight-gutter"];
          elementsIds.forEach((elId) => {
            const div = window.document.getElementById(elId);
            if (div) {
              div.remove();
            }
          });
          selectedAnnoteEl = undefined;
        };
          // Handle positioning of the toggle
      window.addEventListener(
        "resize",
        throttle(() => {
          elRect = undefined;
          if (selectedAnnoteEl) {
            selectCodeLines(selectedAnnoteEl);
          }
        }, 10)
      );
      function throttle(fn, ms) {
      let throttle = false;
      let timer;
        return (...args) => {
          if(!throttle) { // first call gets through
              fn.apply(this, args);
              throttle = true;
          } else { // all the others get throttled
              if(timer) clearTimeout(timer); // cancel #2
              timer = setTimeout(() => {
                fn.apply(this, args);
                timer = throttle = false;
              }, ms);
          }
        };
      }
        // Attach click handler to the DT
        const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');
        for (const annoteDlNode of annoteDls) {
          annoteDlNode.addEventListener('click', (event) => {
            const clickedEl = event.target;
            if (clickedEl !== selectedAnnoteEl) {
              unselectCodeLines();
              const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');
              if (activeEl) {
                activeEl.classList.remove('code-annotation-active');
              }
              selectCodeLines(clickedEl);
              clickedEl.classList.add('code-annotation-active');
            } else {
              // Unselect the line
              unselectCodeLines();
              clickedEl.classList.remove('code-annotation-active');
            }
          });
        }
    const findCites = (el) => {
      const parentEl = el.parentElement;
      if (parentEl) {
        const cites = parentEl.dataset.cites;
        if (cites) {
          return {
            el,
            cites: cites.split(' ')
          };
        } else {
          return findCites(el.parentElement)
        }
      } else {
        return undefined;
      }
    };
    var bibliorefs = window.document.querySelectorAll('a[role="doc-biblioref"]');
    for (var i=0; i<bibliorefs.length; i++) {
      const ref = bibliorefs[i];
      const citeInfo = findCites(ref);
      if (citeInfo) {
        tippyHover(citeInfo.el, function() {
          var popup = window.document.createElement('div');
          citeInfo.cites.forEach(function(cite) {
            var citeDiv = window.document.createElement('div');
            citeDiv.classList.add('hanging-indent');
            citeDiv.classList.add('csl-entry');
            var biblioDiv = window.document.getElementById('ref-' + cite);
            if (biblioDiv) {
              citeDiv.innerHTML = biblioDiv.innerHTML;
            }
            popup.appendChild(citeDiv);
          });
          return popup.innerHTML;
        });
      }
    }
  });
  </script>
</div> <!-- /content -->




</body></html>
